class Solution
{
	public:
	void dfs(int src,vector<int>&topo,vector<int> &vis,vector<int> adj[])
	{
	    vis[src]=1;
	    
	    for(auto it:adj[src])
	    {
	        if(!vis[it])
	        dfs(it,topo,vis,adj);
	    }
	    topo.push_back(src);
	  
	}
	
	
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int> topo;
	    vector<int> vis(V,0);
	    
	    for(int i=0;i<V;i++)
	    {
	        if(!vis[i])
	        dfs(i,topo,vis,adj);
	    }
	    reverse(topo.begin(),topo.end());
	    return topo;
	}
};
