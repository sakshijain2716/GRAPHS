// User function Template for C++

class Solution{
public:
void dfs(int r,int c,vector<vector<int>> &vis, vector<vector<char>> &mat)
{
    int n = mat.size() ,m=mat[0].size();
    vis[r][c]=1;
    int delrow[]={-1,0,0,+1};
    int delcol[]={0,-1,+1,0};
    for(int i=0;i<4;i++)
    {
        int nrow=r+delrow[i];
        int ncol=c+delcol[i];
        if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && mat[nrow][ncol]=='O' && vis[nrow][ncol]==0)
        {
            dfs(nrow,ncol,vis,mat);
        }
    }
}
    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
         vector<vector<int>> vis(n,vector<int>(m,0));
         for(int i=0;i<n;i++)
         {
             for(int j=0;j<m;j++)
             {
                 if((i==0 || j==0 || i==n-1 || j==m-1) && mat[i][j]=='O')
                 {
                     dfs(i,j,vis,mat);
                 }
             }
         }
         for(int i=0;i<n;i++)
         {
             for(int j=0;j<m;j++)
             {
                 if(vis[i][j]==0 && mat[i][j]=='O')
                 {
                     mat[i][j]='X';
                 }
             }
         }
         return mat;
    }
};
