class Solution {
  public:
  bool dfs(int src ,vector<int>&vis,vector<int>&path,vector<int> adj[])
  {
      vis[src]=1;
      path[src]=1;
      
      for(auto it:adj[src])
      {
          if(!vis[it] && dfs(it,vis,path,adj))
          return true;
          
          else if(path[it])
          return true;
      }
      path[src]=0;
      return false;
  }
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int> vis(V,0);
        vector<int> path(V,0);
        
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                if(dfs(i,vis,path,adj))
                return true;
            }
        }
        return false;
    }
};
