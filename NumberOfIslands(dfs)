class Solution {
  public:
    // Function to find the number of islands.
    void dfs(int row,int col,vector<vector<int>>&vis,vector<vector<char>>& grid)
    {
         vis[row][col]=1;
         int nrow,ncol;
         int n = grid.size() , m = grid[0].size();
             for(int delrow = -1 ; delrow<=1 ; delrow++)
             {
                 for(int delcol=-1;delcol<=1;delcol++)
                 {
                     nrow = row+delrow;
                     ncol = col+delcol;
                     if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]=='1' && !vis[nrow][ncol])
                     {
                         vis[nrow][ncol]=1;
                        dfs(nrow,ncol,vis,grid);
                     }
                 }
             }
             
    }
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int n = grid.size() , m = grid[0].size();
        vector<vector<int>> vis(n,vector<int>(m,0));
       int count=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]=='1' && !vis[i][j])
                {
                    dfs(i,j,vis,grid);
                    count++;
                }
                
            }
        }
        return count;
    }
};
