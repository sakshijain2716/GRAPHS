//KAHNS ALGORITHM
class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int> indeg(V,0);
	    for(int i=0;i<V;i++)       //calculating indegree
	    {
	        for(auto it:adj[i])
	        indeg[it]++;
	    }
	    
	    vector<int> topo;
	    queue<int> q;
	    
	    for(int i=0;i<V;i++)        //vertices with indeg=0 act as starting vertex
	    {
	       if(indeg[i]==0)
	       q.push(i);
	    }
	    
	    while(!q.empty())
	    {
	        int node = q.front();
	        q.pop();
	        topo.push_back(node);
	        for(auto it:adj[node])
	        {
	            indeg[it]--;
	            if(indeg[it]==0)
	            q.push(it);
	        }
	    }
	    return topo;
	}
};
