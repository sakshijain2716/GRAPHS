class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int n = grid.size() , m= grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<int,int>>q;
        int ans=0;
        vector<int>delrow = {-1 ,0 ,0 ,+1};
        vector<int>delcol = {0 , -1 , +1 ,0};

        for(int i=0 ; i<n ; i++)
        {
            for(int j=0 ; j<m ; j++)
            {
                if(i==0 || j==0 || i==n-1 || j==m-1)
                {
                    if(!vis[i][j] && grid[i][j]==1)
                     {
                         q.push({i,j});
                         vis[i][j] = 1;
                     }
                }
            }
        }

        while(!q.empty())
        {
            int row = q.front().first;
            int col = q.front().second;
            q.pop();
            for(int i=0 ;i<4 ; i++)
            {
                int nrow = row+delrow[i];
                int ncol = col +delcol[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && grid[nrow][ncol] == 1)
                {
                    q.push({nrow,ncol});
                    vis[nrow][ncol] =1;
                }
            }
        }
        for(int i=1 ; i<n-1 ;i++)
        {
            for(int j=1 ; j<m-1 ;j++)
            {
                if(!vis[i][j] && grid[i][j]==1)
                ans++;
            }
        }
        return ans;
    }
};
